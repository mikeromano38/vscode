{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 12,
    "sourceType": "module",
    "project": "tsconfig.json"
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/recommended",
    "plugin:react/recommended",
    "prettier"
  ],
  "plugins": [
    "@typescript-eslint",
    "import",
    "unused-imports",
    "react",
    "react-hooks",
    "strict-dependencies",
    "sonarjs"
  ],
  "rules": {
    // Do with TypeScript
    "no-undef": "off",

    "sonarjs/no-ignored-return": "error",

    // https://github.com/typescript-eslint/typescript-eslint/issues/2063#issuecomment-675156492
    "@typescript-eslint/ban-types": [
      "error",
      {
        "extendDefaults": true,
        "types": {
          "{}": false
        }
      }
    ],
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "selector": "function",
        "format": ["PascalCase", "camelCase"]
      }
    ],
    "@typescript-eslint/semi": "warn",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-invalid-void-type": "error",
    "@typescript-eslint/consistent-type-imports": [
      "error",
      {
        "prefer": "type-imports"
      }
    ],

    // Use unused-imports/no-unused-vars
    "@typescript-eslint/no-unused-vars": "off",

    "no-useless-rename": "error",
    "object-shorthand": "error",

    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "parent", "sibling", "index"],
        "newlines-between": "never",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": false
        }
      }
    ],
    "import/no-unresolved": "off",
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "varsIgnorePattern": "^_",
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ],
    "curly": "error",
    "eqeqeq": "error",
    "no-throw-literal": "warn",
    "semi": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "error",
    "react/prop-types": "off",
    "react/forbid-elements": [
      "error",
      {
        "forbid": [
          "a",
          "abbr",
          "address",
          "area",
          "article",
          "aside",
          "audio",
          "b",
          "base",
          "bdi",
          "bdo",
          "big",
          "blockquote",
          "body",
          "br",
          "button",
          "canvas",
          "caption",
          "cite",
          "code",
          "col",
          "colgroup",
          "data",
          "datalist",
          "dd",
          "del",
          "details",
          "dfn",
          "dialog",
          "div",
          "dl",
          "dt",
          "em",
          "embed",
          "fieldset",
          "figcaption",
          "figure",
          "footer",
          // "form",
          "h1",
          "h2",
          "h3",
          "h4",
          "h5",
          "h6",
          "head",
          "header",
          "hr",
          "html",
          "i",
          "iframe",
          "img",
          "input",
          "ins",
          "kbd",
          "keygen",
          "label",
          "legend",
          "li",
          "link",
          "main",
          "map",
          "mark",
          "menu",
          "menuitem",
          "meta",
          "meter",
          "nav",
          "noscript",
          "object",
          "ol",
          "optgroup",
          "option",
          "output",
          "p",
          "param",
          "picture",
          "pre",
          "progress",
          "q",
          "rp",
          "rt",
          "ruby",
          "s",
          "samp",
          "script",
          "section",
          "select",
          "small",
          "source",
          "span",
          "strong",
          "style",
          "sub",
          "summary",
          "sup",
          "table",
          "tbody",
          "td",
          "textarea",
          "tfoot",
          "th",
          "thead",
          "time",
          "title",
          "tr",
          "track",
          "u",
          "ul",
          "var",
          "video",
          "wbr"
        ]
      }
    ],

    "strict-dependencies/strict-dependencies": [
      "error",
      [
        {
          "module": "src/pages",
          "allowReferenceFrom": ["src/App.tsx"],
          "allowSameModule": false
        },
        {
          "module": "next/domain",
          "allowReferenceFrom": ["src/pages"],
          "allowSameModule": false
        },
        {
          "module": "src/ui",
          "allowReferenceFrom": ["src/domain"],
          "allowSameModule": true
        }
      ],
      {
        "resolveRelativeImport": true
      }
    ]
  },
  "ignorePatterns": ["out", "dist", "**/*.d.ts"],
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}
